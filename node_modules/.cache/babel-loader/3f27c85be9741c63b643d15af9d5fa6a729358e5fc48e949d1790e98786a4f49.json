{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kqtan\\\\DS projects\\\\flask-react-app\\\\src\\\\components\\\\Predict.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predict() {\n  _s();\n  const [data, setData] = useState(null);\n  const [constructors, setConstructors] = useState([]);\n  const [drivers, setDrivers] = useState({});\n  useEffect(() => {\n    fetch('/predict/1').then(res => res.json()).then(data => {\n      console.log(\"Received data:\", data);\n      setData(data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    const fetchConstructors = async () => {\n      const response = await fetch('https://ergast.com/api/f1/2024/constructors/');\n      const data = await response.json();\n      setConstructors(data.MRData.ConstructorTable.Constructors);\n\n      // Fetch drivers for each constructor\n      for (const constructor of data.MRData.ConstructorTable.Constructors) {\n        const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers`);\n        const driversData = await driversResponse.json();\n        setDrivers(prev => ({\n          ...prev,\n          [constructor.constructorId]: driversData.MRData.DriverTable.Drivers\n        }));\n      }\n    };\n    fetchConstructors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [console.log(data), data ? data.message : \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose a Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), constructors.map(constructor => {\n      var _drivers$constructor$;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: constructor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_drivers$constructor$ = drivers[constructor.constructorId]) === null || _drivers$constructor$ === void 0 ? void 0 : _drivers$constructor$.map(driver => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [driver.givenName, \" \", driver.familyName]\n          }, driver.driverId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, constructor.constructorId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Predict, \"12fJHivS2ga+M7wwu4Np9oraicw=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Predict","_s","data","setData","constructors","setConstructors","drivers","setDrivers","fetch","then","res","json","console","log","catch","error","fetchConstructors","response","MRData","ConstructorTable","Constructors","constructor","driversResponse","constructorId","driversData","prev","DriverTable","Drivers","children","message","fileName","_jsxFileName","lineNumber","columnNumber","map","_drivers$constructor$","name","driver","givenName","familyName","driverId","_c","$RefreshReg$"],"sources":["C:/Users/kqtan/DS projects/flask-react-app/src/components/Predict.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Predict() {\r\n    const [data, setData] = useState(null);\r\n    const [constructors, setConstructors] = useState([]);\r\n    const [drivers, setDrivers] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch('/predict/1')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"Received data:\", data);\r\n                setData(data);\r\n            })\r\n            .catch(error => console.error(\"Error fetching data:\", error));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchConstructors = async () => {\r\n            const response = await fetch('https://ergast.com/api/f1/2024/constructors/');\r\n            const data = await response.json();\r\n            setConstructors(data.MRData.ConstructorTable.Constructors);\r\n            \r\n            // Fetch drivers for each constructor\r\n            for (const constructor of data.MRData.ConstructorTable.Constructors) {\r\n                const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers`);\r\n                const driversData = await driversResponse.json();\r\n                setDrivers(prev => ({\r\n                    ...prev,\r\n                    [constructor.constructorId]: driversData.MRData.DriverTable.Drivers,\r\n                }));\r\n            }\r\n        };\r\n\r\n        fetchConstructors();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {console.log(data)}\r\n                {data ? data.message : \"Loading...\"}\r\n            </h1>\r\n\r\n            <h1>Choose a Driver</h1>\r\n                {constructors.map(constructor => (\r\n                    <div key={constructor.constructorId}>\r\n                        <h2>{constructor.name}</h2>\r\n                        <ul>\r\n                            {drivers[constructor.constructorId]?.map(driver => (\r\n                                <li key={driver.driverId}>{driver.givenName} {driver.familyName}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Predict;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}