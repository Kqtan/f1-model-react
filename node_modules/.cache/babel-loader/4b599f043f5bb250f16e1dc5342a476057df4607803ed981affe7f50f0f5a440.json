{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kqtan\\\\DS projects\\\\flask-react-app\\\\src\\\\components\\\\Predict.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predict() {\n  _s();\n  const [data, setData] = useState(null);\n  const [constructors, setConstructors] = useState([]);\n  const [drivers, setDrivers] = useState({});\n  useEffect(() => {\n    fetch('/predict/1').then(res => res.json()).then(data => setData(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchConstructors = async () => {\n      setLoading(true); // Start loading\n      try {\n        const response = await fetch('https://ergast.com/api/f1/2024/constructors.json');\n        const data = await response.json();\n        setConstructors(data.MRData.ConstructorTable.Constructors);\n        for (const constructor of data.MRData.ConstructorTable.Constructors) {\n          const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers.json`);\n          const driversData = await driversResponse.json();\n          setDrivers(prev => ({\n            ...prev,\n            [constructor.constructorId]: driversData.MRData.DriverTable.Drivers\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching constructors:\", error);\n      } finally {\n        setLoading(false); // End loading\n      }\n    };\n    fetchConstructors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data ? data.message : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading constructors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Choose a Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), constructors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No constructors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : constructors.map(constructor => {\n        var _drivers$constructor$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: constructor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (_drivers$constructor$ = drivers[constructor.constructorId]) === null || _drivers$constructor$ === void 0 ? void 0 : _drivers$constructor$.map(driver => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [driver.givenName, \" \", driver.familyName]\n            }, driver.driverId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)]\n        }, constructor.constructorId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Predict, \"PJxvEef9c4Von0MMZE7cRgcINZM=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Predict","_s","data","setData","constructors","setConstructors","drivers","setDrivers","fetch","then","res","json","catch","error","console","loading","setLoading","fetchConstructors","response","MRData","ConstructorTable","Constructors","constructor","driversResponse","constructorId","driversData","prev","DriverTable","Drivers","children","message","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_drivers$constructor$","name","driver","givenName","familyName","driverId","_c","$RefreshReg$"],"sources":["C:/Users/kqtan/DS projects/flask-react-app/src/components/Predict.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Predict() {\r\n    const [data, setData] = useState(null);\r\n    const [constructors, setConstructors] = useState([]);\r\n    const [drivers, setDrivers] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch('/predict/1')\r\n            .then(res => res.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error(\"Error fetching data:\", error));\r\n    }, []);\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchConstructors = async () => {\r\n            setLoading(true); // Start loading\r\n            try {\r\n                const response = await fetch('https://ergast.com/api/f1/2024/constructors.json');\r\n                const data = await response.json();\r\n                setConstructors(data.MRData.ConstructorTable.Constructors);\r\n                \r\n                for (const constructor of data.MRData.ConstructorTable.Constructors) {\r\n                    const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers.json`);\r\n                    const driversData = await driversResponse.json();\r\n                    setDrivers(prev => ({\r\n                        ...prev,\r\n                        [constructor.constructorId]: driversData.MRData.DriverTable.Drivers,\r\n                    }));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching constructors:\", error);\r\n            } finally {\r\n                setLoading(false); // End loading\r\n            }\r\n        };\r\n\r\n        fetchConstructors();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {data ? data.message : \"Loading...\"}\r\n            </h1>\r\n\r\n            {loading ? (\r\n                <p>Loading constructors...</p>\r\n            ) : (\r\n                <div>\r\n                    <h1>Choose a Driver</h1>\r\n                    {constructors.length === 0 ? (\r\n                        <p>No constructors found.</p>\r\n                    ) : (\r\n                        constructors.map(constructor => (\r\n                            <div key={constructor.constructorId}>\r\n                                <h2>{constructor.name}</h2>\r\n                                <ul>\r\n                                    {drivers[constructor.constructorId]?.map(driver => (\r\n                                        <li key={driver.driverId}>{driver.givenName} {driver.familyName}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Predict;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}