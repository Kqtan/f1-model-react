{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kqtan\\\\DS projects\\\\flask-react-app\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\n// components/Calendar.js\nimport React, { useState, useEffect } from 'react';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [calendar, setCalendar] = useState([]);\n  const [closestRace, setClosestRace] = useState(null); // To track the closest upcoming race\n\n  useEffect(() => {\n    fetch('https://ergast.com/api/f1/current.json').then(response => response.json()).then(data => {\n      const races = data.MRData.RaceTable.Races;\n      setCalendar(races);\n      setClosestRace(findClosestRace(races));\n    }).catch(error => console.error(\"Error fetching calendar:\", error));\n  }, []);\n\n  // Function to find the closest race that is more than 3 days away\n  const findClosestRace = races => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Set to the start of the day\n\n    const upcomingRaces = races.filter(race => new Date(race.date) > today);\n\n    // Find the closest upcoming race that is more than 3 days away\n    return upcomingRaces.find(race => {\n      const raceDate = new Date(race.date);\n      raceDate.setHours(0, 0, 0, 0); // Set to the start of the day\n      const diffDays = (raceDate - today) / (1000 * 60 * 60 * 24);\n      return diffDays > 3;\n    });\n  };\n\n  // Helper function to check if a race is live (within 3 days)\n  const isLiveRace = raceDate => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Set to the start of the day\n    const raceDay = new Date(raceDate);\n    raceDay.setHours(0, 0, 0, 0); // Set to the start of the day\n    const diffDays = (raceDay - today) / (1000 * 60 * 60 * 24);\n    return diffDays >= 0 && diffDays <= 3;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.formula1.com/etc/designs/fom-website/images/f1_logo.svg\",\n        alt: \"F1 Logo\",\n        className: \"f1-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"2024 F1 Season Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: calendar.map(race => {\n        const isSprint = race.Sprint ? true : false;\n        const raceDate = new Date(race.date);\n        const isLive = isLiveRace(race.date);\n        const isClosest = closestRace && closestRace.round === race.round;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${isSprint ? 'sprint-card' : 'race-card'} ${isLive ? 'live' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: race.raceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), isLive && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"live-badge\",\n            children: \"LIVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 40\n          }, this), isClosest && !isLive && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"closest-flag\",\n            children: \"UP NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: race.Circuit.circuitName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: raceDate.toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), race.Circuit.Location ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [race.Circuit.Location.locality, \", \", race.Circuit.Location.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Location data not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, race.round, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"NLvo0MT2BGHrfqakaVcDCiV5E8E=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","_s","calendar","setCalendar","closestRace","setClosestRace","fetch","then","response","json","data","races","MRData","RaceTable","Races","findClosestRace","catch","error","console","today","Date","setHours","upcomingRaces","filter","race","date","find","raceDate","diffDays","isLiveRace","raceDay","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","isSprint","Sprint","isLive","isClosest","round","raceName","Circuit","circuitName","toLocaleDateString","Location","locality","country","_c","$RefreshReg$"],"sources":["C:/Users/kqtan/DS projects/flask-react-app/src/components/Calendar.js"],"sourcesContent":["// components/Calendar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Calendar.css';\r\n\r\nfunction Calendar() {\r\n    const [calendar, setCalendar] = useState([]);\r\n    const [closestRace, setClosestRace] = useState(null); // To track the closest upcoming race\r\n\r\n    useEffect(() => {\r\n        fetch('https://ergast.com/api/f1/current.json')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const races = data.MRData.RaceTable.Races;\r\n                setCalendar(races);\r\n                setClosestRace(findClosestRace(races));\r\n            })\r\n            .catch((error) => console.error(\"Error fetching calendar:\", error));\r\n    }, []);\r\n\r\n    // Function to find the closest race that is more than 3 days away\r\n    const findClosestRace = (races) => {\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0); // Set to the start of the day\r\n    \r\n        const upcomingRaces = races.filter(race => new Date(race.date) > today);\r\n        \r\n        // Find the closest upcoming race that is more than 3 days away\r\n        return upcomingRaces.find(race => {\r\n            const raceDate = new Date(race.date);\r\n            raceDate.setHours(0, 0, 0, 0); // Set to the start of the day\r\n            const diffDays = (raceDate - today) / (1000 * 60 * 60 * 24);\r\n            return diffDays > 3;\r\n        });\r\n    };\r\n    \r\n    // Helper function to check if a race is live (within 3 days)\r\n    const isLiveRace = (raceDate) => {\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0); // Set to the start of the day\r\n        const raceDay = new Date(raceDate);\r\n        raceDay.setHours(0, 0, 0, 0); // Set to the start of the day\r\n        const diffDays = (raceDay - today) / (1000 * 60 * 60 * 24);\r\n        return diffDays >= 0 && diffDays <= 3;\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <header className=\"header\">\r\n                <img src=\"https://www.formula1.com/etc/designs/fom-website/images/f1_logo.svg\" alt=\"F1 Logo\" className=\"f1-logo\" />\r\n                <h1>2024 F1 Season Calendar</h1>\r\n            </header>\r\n            <div className=\"calendar\">\r\n                {calendar.map((race) => {\r\n                    const isSprint = race.Sprint ? true : false;\r\n                    const raceDate = new Date(race.date);\r\n                    const isLive = isLiveRace(race.date);\r\n                    const isClosest = closestRace && closestRace.round === race.round;\r\n\r\n                    return (\r\n                        <div key={race.round} className={`${isSprint ? 'sprint-card' : 'race-card'} ${isLive ? 'live' : ''}`}>\r\n                            <h2>{race.raceName}</h2>\r\n                            {isLive && <span className=\"live-badge\">LIVE</span>}\r\n                            {isClosest && !isLive && <span className=\"closest-flag\">UP NEXT</span>}\r\n                            <p>{race.Circuit.circuitName}</p>\r\n                            <p>{raceDate.toLocaleDateString()}</p>\r\n                            {race.Circuit.Location ? (\r\n                                <p>{race.Circuit.Location.locality}, {race.Circuit.Location.country}</p>\r\n                            ) : (\r\n                                <p>Location data not available</p>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}