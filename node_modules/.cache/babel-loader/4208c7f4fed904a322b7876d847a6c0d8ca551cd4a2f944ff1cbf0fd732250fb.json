{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kqtan\\\\DS projects\\\\flask-react-app\\\\src\\\\components\\\\Predict.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predict() {\n  _s();\n  const [data, setData] = useState(null);\n  const [constructors, setConstructors] = useState([]);\n  const [drivers, setDrivers] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('/predict/1').then(res => res.json()).then(data => setData(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    const fetchConstructors = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('https://ergast.com/api/f1/2024/constructors.json');\n        const data = await response.json();\n        setConstructors(data.MRData.ConstructorTable.Constructors);\n        for (const constructor of data.MRData.ConstructorTable.Constructors) {\n          const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers.json`);\n          const driversData = await driversResponse.json();\n          setDrivers(prev => ({\n            ...prev,\n            [constructor.constructorId]: driversData.MRData.DriverTable.Drivers\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching constructors:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConstructors();\n  }, []);\n\n  // Create a mapping of drivers to constructors\n  const driverConstructorMap = {};\n  constructors.forEach(constructor => {\n    const constructorDrivers = drivers[constructor.constructorId] || [];\n    constructorDrivers.forEach(driver => {\n      const driverId = driver.driverId;\n      if (!driverConstructorMap[driverId]) {\n        driverConstructorMap[driverId] = {\n          name: `${driver.givenName} ${driver.familyName}`,\n          constructors: [constructor.name]\n        };\n      } else {\n        driverConstructorMap[driverId].constructors.push(constructor.name);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data ? data.message : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading constructors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Choose a Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), Object.entries(driverConstructorMap).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No drivers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(driverConstructorMap).map(([driverId, driverInfo]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [driverInfo.name, \" - \", driverInfo.constructors.join(' / ')]\n        }, driverId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Predict, \"eoDtJE64iquzE7Jt6VXF3GFKbnY=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Predict","_s","data","setData","constructors","setConstructors","drivers","setDrivers","loading","setLoading","fetch","then","res","json","catch","error","console","fetchConstructors","response","MRData","ConstructorTable","Constructors","constructor","driversResponse","constructorId","driversData","prev","DriverTable","Drivers","driverConstructorMap","forEach","constructorDrivers","driver","driverId","name","givenName","familyName","push","children","message","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","length","map","driverInfo","join","_c","$RefreshReg$"],"sources":["C:/Users/kqtan/DS projects/flask-react-app/src/components/Predict.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Predict() {\r\n    const [data, setData] = useState(null);\r\n    const [constructors, setConstructors] = useState([]);\r\n    const [drivers, setDrivers] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetch('/predict/1')\r\n            .then(res => res.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error(\"Error fetching data:\", error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchConstructors = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch('https://ergast.com/api/f1/2024/constructors.json');\r\n                const data = await response.json();\r\n                setConstructors(data.MRData.ConstructorTable.Constructors);\r\n                \r\n                for (const constructor of data.MRData.ConstructorTable.Constructors) {\r\n                    const driversResponse = await fetch(`https://ergast.com/api/f1/2024/constructors/${constructor.constructorId}/drivers.json`);\r\n                    const driversData = await driversResponse.json();\r\n                    setDrivers(prev => ({\r\n                        ...prev,\r\n                        [constructor.constructorId]: driversData.MRData.DriverTable.Drivers,\r\n                    }));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching constructors:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchConstructors();\r\n    }, []);\r\n\r\n    // Create a mapping of drivers to constructors\r\n    const driverConstructorMap = {};\r\n\r\n    constructors.forEach(constructor => {\r\n        const constructorDrivers = drivers[constructor.constructorId] || [];\r\n        constructorDrivers.forEach(driver => {\r\n            const driverId = driver.driverId;\r\n            if (!driverConstructorMap[driverId]) {\r\n                driverConstructorMap[driverId] = {\r\n                    name: `${driver.givenName} ${driver.familyName}`,\r\n                    constructors: [constructor.name],\r\n                };\r\n            } else {\r\n                driverConstructorMap[driverId].constructors.push(constructor.name);\r\n            }\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>{data ? data.message : \"Loading...\"}</h1>\r\n\r\n            {loading ? (\r\n                <p>Loading constructors...</p>\r\n            ) : (\r\n                <div>\r\n                    <h1>Choose a Driver</h1>\r\n                    {Object.entries(driverConstructorMap).length === 0 ? (\r\n                        <p>No drivers found.</p>\r\n                    ) : (\r\n                        <ul>\r\n                            {Object.entries(driverConstructorMap).map(([driverId, driverInfo]) => (\r\n                                <li key={driverId}>\r\n                                    {driverInfo.name} - {driverInfo.constructors.join(' / ')}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Predict;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}